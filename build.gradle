plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.graalvm.buildtools.native' version '0.10.3'
    id 'org.cyclonedx.bom' version '1.10.0'
    id 'io.spring.javaformat' version '0.0.43'
    id "io.spring.nohttp" version "0.0.11"
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'io.spring.javaformat'

gradle.startParameter.excludedTaskNames += ["checkFormatAot", "checkFormatAotTest"]

group = 'org.springframework.samples'
version = '3.4.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

ext {
    checkstyleVersion = "10.20.1"
    springJavaformatCheckstyleVersion = "0.0.43"
    webjarsLocatorLiteVersion = "1.0.1"
    webjarsFontawesomeVersion = "4.7.0"
    webjarsBootstrapVersion = "5.3.3"
}

dependencies {
    // Soporte Prometheus para Actuator
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Otros necesarios
    implementation 'io.projectreactor:reactor-core'
    implementation 'javax.cache:cache-api'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api'

    // Actuator
    runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'

    // WebJars (Bootstrap + FontAwesome)
    runtimeOnly "org.webjars:webjars-locator-lite:${webjarsLocatorLiteVersion}"
    runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
    runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"

    // Cache
    runtimeOnly 'com.github.ben-manes.caffeine:caffeine'

    // DB
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.postgresql:postgresql'

    // Desarrollo
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.boot:spring-boot-docker-compose'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'

    // Code Style
    checkstyle "io.spring.javaformat:spring-javaformat-checkstyle:${springJavaformatCheckstyleVersion}"
    checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
}

tasks.named('test') {
    useJUnitPlatform()
}

checkstyle {
    configDirectory = project.file('src/checkstyle')
    configFile = file('src/checkstyle/nohttp-checkstyle.xml')
}

checkstyleNohttp {
    configDirectory = project.file('src/checkstyle')
    configFile = file('src/checkstyle/nohttp-checkstyle.xml')
}

// Dependencias entre tareas de formato y checkstyle
tasks.named("formatMain").configure {
    dependsOn("checkstyleMain")
    dependsOn("checkstyleNohttp")
}
tasks.named("formatTest").configure {
    dependsOn("checkstyleTest")
    dependsOn("checkstyleNohttp")
}

// Desactivaci√≥n de AOT opcional
checkstyleAot.enabled = false
checkstyleAotTest.enabled = false
checkFormatAot.enabled = false
checkFormatAotTest.enabled = false
formatAot.enabled = false
formatAotTest.enabled = false
